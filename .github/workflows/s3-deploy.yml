on: 
    push:
      branches:
       - DEVELOP

env:
  BUCKET_NAME: "new-dev.legalremit.com"
  DISTRIBUTION_ID: "E19C4XO1BV1VQG"
  AWS_REGION: "ap-southeast-2"

jobs:
  build-deploy:
    name: 'Build and deploy'
    runs-on: ubuntu-latest
    
    ##############################
    #Node Install and build
    ##############################
    steps:
     - name: Configure AWS Credentials
       uses: aws-actions/configure-aws-credentials@v3
       with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
     - uses: actions/checkout@v3
     - uses: actions/setup-node@v3.6.0
       with:
        node-version: 18
        cache: 'npm'
     - name: Cache node modules
       id: cache-nodemodules
       uses: actions/cache@v3
       env:
        cache-name: cache-node-modules
       with:
      # caching node_modules
         path: node_modules
         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
         restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    
     - name: Install Dependencies
       if: steps.cache-nodemodules.outputs.cache-hit != 'true'
       run: npm install
    
     - name: Build
       run:  npm run build
    
     - name: Copy Build File to s3
       run: |
        aws s3 sync ./dist/ s3://${{ env.BUCKET_NAME }} --delete
        aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"
